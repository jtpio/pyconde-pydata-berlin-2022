"use strict";(self.webpackChunkjupyterlab_filesystem_access=self.webpackChunkjupyterlab_filesystem_access||[]).push([[611],{611:(e,t,i)=>{i.r(t),i.d(t,{default:()=>c});var n=i(114),o=i(146),r=i(276),a=i(881),s=i(50),l=i(168);class d{constructor(){this._isDisposed=!1,this._fileChanged=new l.Signal(this),this._rootHandle=null}get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,l.Signal.clearData(this))}get name(){return"FileSystem"}get serverSettings(){return s.ServerConnection.makeSettings()}get fileChanged(){return this._fileChanged}get rootHandle(){return this._rootHandle}set rootHandle(e){this._rootHandle=e}async get(e,t){const i=this._rootHandle;if(!i)return{name:"",path:"",created:(new Date).toISOString(),last_modified:(new Date).toISOString(),format:"json",content:null,writable:!0,type:"directory",mimetype:"application/json"};if(e){const t=await i.getFileHandle(e),n=await t.getFile();return{name:n.name,path:n.name,created:new Date(n.lastModified).toISOString(),last_modified:new Date(n.lastModified).toISOString(),format:"text",content:await n.text(),writable:!0,type:"file",mimetype:"text/plain"}}const n=[];for await(const e of i.values())if("file"===e.kind){const t=await e.getFile();n.push({name:t.name,path:t.name,created:new Date(t.lastModified).toISOString(),last_modified:new Date(t.lastModified).toISOString(),format:"text",content:await t.text(),writable:!0,type:"file",mimetype:"text/plain"})}else n.push({name:e.name,path:e.name,created:(new Date).toISOString(),last_modified:(new Date).toISOString(),format:"json",content:null,writable:!0,type:"directory",mimetype:"application/json"});const o=new Date;return{name:"root",path:"",last_modified:o.toISOString(),created:o.toISOString(),format:"json",mimetype:"application/json",content:n,size:void 0,writable:!0,type:"directory"}}getDownloadUrl(e){throw new Error("Method not implemented.")}newUntitled(e){throw new Error("Method not implemented.")}delete(e){throw new Error("Method not implemented.")}rename(e,t){throw new Error("Method not implemented.")}async save(e,t){const i=this._rootHandle;if(!i)throw new Error("No root file handle");const n=await i.getFileHandle(e),o=await n.createWritable({}),r=t?.content;return await o.write(r),await o.close(),this.get(e)}copy(e,t){throw new Error("Method not implemented.")}async createCheckpoint(e){return{id:"test",last_modified:(new Date).toISOString()}}async listCheckpoints(e){return[{id:"test",last_modified:(new Date).toISOString()}]}restoreCheckpoint(e,t){return Promise.resolve(void 0)}deleteCheckpoint(e,t){return Promise.resolve(void 0)}}const c={id:"jupyterlab-filesystem-access:plugin",requires:[o.IFileBrowserFactory,r.ITranslator],autoStart:!0,activate:(e,t,i)=>{if(!window.showDirectoryPicker)return void console.warn("The File System Access API is not supported in this browser.");const{serviceManager:o}=e,{createFileBrowser:r}=t,s=i.load("jupyterlab-filesystem-access"),l=new d;o.contents.addDrive(l);const c=r("jp-filesystem-browser",{driveName:l.name});c.title.caption=s.__("Local File System"),c.title.icon=a.listIcon;const m=new n.ToolbarButton({icon:a.folderIcon,onClick:async()=>{const e=await window.showDirectoryPicker();e&&(l.rootHandle=e)},tooltip:s.__("Open a new folder")});c.toolbar.insertItem(0,"open-directory",m),e.shell.add(c,"left")}}}}]);